local player = game.Players.LocalPlayer
local Players = game:GetService("Players")
local args
local weaponStage = getgenv().weaponStage or "One"
local arata = "Zero"
local autoSkill = getgenv().weaponStage or "F"
local TweenService = game:GetService("TweenService")
local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
local gyakusatsu = game.Workspace.NPCSpawns.GyakusatsuSpawn:FindFirstChild("Gyakusatsu")
local npcSpawns = game:GetService("Workspace"):FindFirstChild("NPCSpawns")
local gyakusatsuSpawn = npcSpawns and npcSpawns:FindFirstChild("GyakusatsuSpawn")
local destinationflbl = CFrame.new(-998.727, 64.7173, 339.988) * CFrame.Angles(0, math.rad(-90), 0)
local destinationfrbr = CFrame.new(-998.727, 64.7173, 204.988) * CFrame.Angles(0, math.rad(-90), 0)
local destinationmid = CFrame.new(-998.727, 64.7173, 270) * CFrame.Angles(0, math.rad(-90), 0)  
local tweenSpeed = 250

if gyakusatsu then
    Openweapon()
    wait(0.5)
    autoSkill()
    wait(0.5)
    moveToFLBL() 
else
    local function gyafind()
        local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false

local last

local File = pcall(function()
   AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
   table.insert(AllIDs, actualHour)
   writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
   local Site;
   if foundAnything == "" then
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
   else
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
   end
   local ID = ""
   if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
       foundAnything = Site.nextPageCursor
   end
   local num = 0;
   local extranum = 0
   for i,v in pairs(Site.data) do
       extranum += 1
       local Possible = true
       ID = tostring(v.id)
       if tonumber(v.maxPlayers) > tonumber(v.playing) then
           if extranum ~= 1 and tonumber(v.playing) < last or extranum == 1 then
               last = tonumber(v.playing)
           elseif extranum ~= 1 then
               continue
           end
           for _,Existing in pairs(AllIDs) do
               if num ~= 0 then
                   if ID == tostring(Existing) then
                       Possible = false
                   end
               else
                   if tonumber(actualHour) ~= tonumber(Existing) then
                       local delFile = pcall(function()
                           delfile("NotSameServers.json")
                           AllIDs = {}
                           table.insert(AllIDs, actualHour)
                       end)
                   end
               end
               num = num + 1
           end
           if Possible == true then
               table.insert(AllIDs, ID)
               wait()
               pcall(function()
                   writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                   wait()
                   game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
               end)
               wait(4)
           end
       end
   end
end

function Teleport()
   while wait() do
       pcall(function()
           TPReturner()
           if foundAnything ~= "" then
               TPReturner()
           end
       end)
   end
end

Teleport()  
    end
end

    local function Openweapon()
        local quinque = player.Character:FindFirstChild("Quinque")
        if not quinque then
           game.Players.LocalPlayer.Character.Remotes.KeyEvent:FireServer(args, weaponStage, "Down", CFrame.new(), CFrame.new())
        end  
    end    

    local function autoSkill()
        local autoSkill = "F"  
         game.Players.LocalPlayer.Character.Remotes.KeyEvent:FireServer(args, autoSkill, "Down", CFrame.new(), CFrame.new())
    end

    local function moveToFLBL()
     if humanoidRootPart then
        local tweenInfo = TweenInfo.new((humanoidRootPart.Position - destinationflbl.p).magnitude / tweenSpeed, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
        local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = destinationflbl})
        FLBL()
        tween:Play()
      end
   end

 local function moveToFRBR()
    if humanoidRootPart then
        local tweenInfo = TweenInfo.new((humanoidRootPart.Position - destinationfrbr.p).magnitude / tweenSpeed, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
        local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = destinationfrbr})
        tween:Play()
    end
 end

 local function moveTomid()
    if humanoidRootPart then
        local tweenInfo = TweenInfo.new((humanoidRootPart.Position - destinationmid.p).magnitude / tweenSpeed, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
        local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = destinationmid})
        tween:Play()
    end
 end

 local function FLBL()
    if gyakusatsuSpawn then     
        local fl = gyakusatsuSpawn:FindFirstChild("FL") and gyakusatsuSpawn.FL:FindFirstChildOfClass("Humanoid")
        local bl = gyakusatsuSpawn:FindFirstChild("BL") and gyakusatsuSpawn.BL:FindFirstChildOfClass("Humanoid")
        
        if fl and bl then
            while fl.Health > 0 and bl.Health > 0 do
            wait(0.5)
            end
            moveToFRBR()
        end
    end
 end

 local function FRBR()
    if gyakusatsuSpawn then     
        local fr = gyakusatsuSpawn:FindFirstChild("FR") and gyakusatsuSpawn.FR:FindFirstChildOfClass("Humanoid")
        local br = gyakusatsuSpawn:FindFirstChild("BR") and gyakusatsuSpawn.BR:FindFirstChildOfClass("Humanoid")
        
        if fr and br then
            while fr.Health > 0 and br.Health > 0 do
            wait(0.5)
            end
            moveTomid()
        end
    end
 end

 local function MID()
    if gyakusatsuSpawn then
        local mid = gyakusatsuSpawn:FindFirstChild("Gyakusatsu") and gyakusatsuSpawn.Gyakusatsu:FindFirstChildOfClass("Humanoid")
    if mid then
        while mid.Health > 0 do
        wait(0.5)
        end
        gyafind()
       end
    end
 end    
